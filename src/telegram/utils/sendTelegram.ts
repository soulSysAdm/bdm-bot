import axios from 'axios'

let TELEGRAM_TOKEN: string | undefined

if (process.env.VERCEL) {
  TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN || ''
} else {
  const dotenv = require('dotenv')
  dotenv.config()
  TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN || ''
}

const INSTRUCTION_TEXT = `üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –≤–≤–æ–¥—É –¥–∞–Ω–Ω—ã—Ö:

1. –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞  
2. –°—Å—ã–ª–∫–∞  
3. –õ–æ–≥–∏–Ω –∏–ª–∏ –ø–æ—á—Ç–∞  
4. –ü–∞—Ä–æ–ª—å  
5. –ù–∏–∫–Ω–µ–π–º (–º–æ–∂–Ω–æ –æ–ø—É—Å—Ç–∏—Ç—å)

‚ö†Ô∏è –ö–∞–∂–¥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ.
–ü—Ä–∏–º–µ—Ä:

Cloudflare  
https://cloudflare.com/login  
user@gmail.com  
password123  
nickname_optional
`

export async function sendTelegramMessage(chatId: number, text: string) {
  try {
    const res = await axios.post(
      `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`,
      {
        chat_id: chatId,
        text,
        disable_web_page_preview: true,
      },
    )
    return res.data.result?.message_id
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error.message)
  }
}

export async function sendInstructionTelegramMessage(chatId: number) {
  try {
    const res = await axios.post(
      `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`,
      {
        chat_id: chatId,
        text: INSTRUCTION_TEXT,
        // parse_mode: 'Markdown',
        disable_web_page_preview: true,
      },
    )
    return res.data.result?.message_id
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error.message)
  }
}
